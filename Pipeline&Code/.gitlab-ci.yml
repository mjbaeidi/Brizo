stages:
  - build
  - test
  - push

variables:
  IMAGE_NAME: "registry.okcs.com/containers-okcs/flask-apm-app"
  IMAGE_TAG: "$CI_COMMIT_TAG"
  DOCKER_TLS_CERTDIR: ""
<<<<<<< HEAD
  # Cache settings for Docker layers
  DOCKER_BUILDKIT: 1
  DOCKER_DRIVER: overlay2
  # Cache directories
  DOCKER_CACHE_DIR: ".docker-cache"
=======
>>>>>>> parent of 8fcaab8 (enhance CI configuration with BuildKit support and improved caching)

default:
  tags:
    - docker
  image: 
    name: docker:24.0.5
    pull_policy: if-not-present

  services:
<<<<<<< HEAD
    - name: docker:24.0.5-dind
      command: ["--storage-driver=overlay2"]

# Define a .before_script template to avoid repetition
.before_script_template: &before_script_def
  before_script:
    - echo "10.192.30.201 registry.okcs.com" >> /etc/hosts
    # Pre-login to registry to pull cache images faster
    - docker login -u "admin" -p "$JFROG_REGISTRY_PASSWORD" registry.okcs.com || echo "Login failed, will retry during push stage"
    # Create cache directories if they don't exist
    - mkdir -p "${DOCKER_CACHE_DIR}"

# Cache for apk packages
.apk_cache: &apk_cache
  cache:
    key: apk-packages
    paths:
      - /var/cache/apk
=======
    - docker:24.0.5-dind
>>>>>>> parent of 8fcaab8 (enhance CI configuration with BuildKit support and improved caching)

# Docker layer cache definition
.docker_layer_cache: &docker_layer_cache
  cache:
    key: docker-cache
    paths:
      - ${DOCKER_CACHE_DIR}
    policy: pull-push

build:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
<<<<<<< HEAD
  <<: [*before_script_def, *docker_layer_cache]
  script:
    # Setup Docker BuildKit cache 
    - mkdir -p "${DOCKER_CACHE_DIR}/buildkit"
    - export DOCKER_BUILDKIT_CACHE_DIR="${DOCKER_CACHE_DIR}/buildkit"
    # Use BuildKit and multi-stage builds for better caching
    - |
      docker build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --cache-from type=local,src=${DOCKER_CACHE_DIR}/buildkit \
        --cache-to type=local,dest=${DOCKER_CACHE_DIR}/buildkit,mode=max \
        --cache-from $IMAGE_NAME:latest \
        --cache-from $IMAGE_NAME:$IMAGE_TAG \
        --tag $IMAGE_NAME:$IMAGE_TAG \
        .
    - docker save $IMAGE_NAME:$IMAGE_TAG | gzip > image.tar.gz
=======
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker save -o image.tar $IMAGE_NAME:$IMAGE_TAG
>>>>>>> parent of 8fcaab8 (enhance CI configuration with BuildKit support and improved caching)
  artifacts:
    paths:
      - image.tar
    expire_in: 1 day

test:
  stage: test
  rules:
    - if: $CI_COMMIT_TAG
  services:
    - name: docker:24.0.5-dind
  script:
    - apk add --no-cache curl
    - docker load -i image.tar
    - docker run -d --name test-container -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG
    - sleep 5
    - curl -f http://docker:5000 || (echo "Test failed" && exit 1)
  after_script:
    - docker stop test-container || true
    - docker rm test-container || true


push:
  stage: push
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "10.192.30.201 registry.okcs.com" >> /etc/hosts
    - |
      if ! docker login -u "admin" -p "$JFROG_REGISTRY_PASSWORD" registry.okcs.com; then
        echo "Failed to log in to registry"
        exit 1
      fi
    - docker load -i image.tar
    - docker push $IMAGE_NAME:$IMAGE_TAG
  after_script:
    - docker logout registry.okcs.com
